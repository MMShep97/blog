version: "3"

services:
  backend:
    # image: strapi/base
    # image: node:14-alpine
    build: ./backend
    container_name: backend
    restart: unless-stopped
    #   build:
      # context: backend
    # entrypoint: /bin/bash
    # command: "bash -c \"if [ ! -d \"node_modules\" ]; then npm i; fi; npm run dev\""
    env_file: ./backend/.env # THESE ARE INJECTED INTO THE CONTAINER
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_HOST: ${DATABASE_HOST}
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
    networks:
      - strapi-app-network
    # volumes:
    #   - .:/app
    ports:
      - "1337:1337"
    depends_on:
      - postgres

  postgres:
    image: postgres
    container_name: postgres
    restart: unless-stopped
    # env_file: backend/.env
    environment:
      # POSTGRES_DB: strapi
      # POSTGRES_USER: strapi
      # POSTGRES_PASSWORD: strapi
      POSTGRES_HOST_AUTH_METHOD: trust # If this is trust, don't need user/password
      # POSTGRES_DB: strapi
      # POSTGRES_INITDB_ROOT_USERNAME: ${POSTGRES_INITDB_ROOT_USERNAME}
      # POSTGRES_INITDB_ROOT_PASSWORD: ${POSTGRES_INITDB_ROOT_PASSWORD}
    networks:
      - strapi-app-network
    volumes:
      - strapidata:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # frontend:
  #   image: node:14-alpine
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./frontend:/srv/app
  #   restart: always
    # working_dir: /usr/local/app
    # entrypoint: "/bin/bash"
    # command: "-c \"if [ ! -d \"node_modules\" ]; then npm i; fi; npm run dev\""

networks:
  strapi-app-network:
    driver: bridge

volumes:
  strapidata:

# version: '3'
# services:
#   strapi:
#     image: strapi/strapi
#     build: ./frontend
#     environment:
#       DATABASE_CLIENT: postgres
#       DATABASE_NAME: strapi
#       DATABASE_HOST: postgres
#       DATABASE_PORT: 5432
#       DATABASE_USERNAME: strapi
#       DATABASE_PASSWORD: strapi
#     volumes:
#       - ./app:/srv/app
#     ports:
#       - '1337:1337'
#     depends_on:
#       - postgres

#   postgres:
#     image: postgres
#     environment:
#       POSTGRES_DB: strapi
#       POSTGRES_USER: strapi
#       POSTGRES_PASSWORD: strapi
#     volumes:
#       - ./data:/var/lib/postgresql/data